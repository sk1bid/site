name: Deploy DevOps Site to K3s

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # üß© 1. –ö–ª–æ–Ω–∏—Ä—É–µ–º –∫–æ–¥
      - name: Checkout code
        uses: actions/checkout@v4

      # ü™£ 2. –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ GHCR
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # üõ†Ô∏è 3. –°–æ–±–∏—Ä–∞–µ–º –∏ –ø—É—à–∏–º Docker-–æ–±—Ä–∞–∑
      - name: Build and push Docker image
        env:
          REPO: ghcr.io/${{ github.repository }}
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          if [ "${{ github.ref_name }}" = "main" ]; then
            TAG="prod-$SHORT_SHA"
          else
            TAG="dev-$SHORT_SHA"
          fi

          echo "üî® Building image: $REPO:$TAG"
          docker build -t $REPO:$TAG .

          echo "üì¶ Pushing image to GHCR..."
          docker push $REPO:$TAG

          echo "TAG=$TAG" >> $GITHUB_ENV

      # üöÄ 4. –î–µ–ø–ª–æ–π –Ω–∞ —Ç–≤–æ–π –¥–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ SSH
      - name: Deploy to K3s over SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 2222
          script: |
            REPO="ghcr.io/${{ github.repository }}"
            TAG=${{ env.TAG }}
            NAMESPACE="default"

            echo "üåÄ Deploying $REPO:$TAG to K3s..."

            # --- Deployment ---
            cat <<EOF | kubectl apply -f -
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: devops-site
              namespace: ${NAMESPACE}
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: devops-site
              template:
                metadata:
                  labels:
                    app: devops-site
                spec:
                  containers:
                    - name: devops-site
                      image: ${REPO}:${TAG}
                      ports:
                        - containerPort: 8080
                      resources:
                        requests:
                          cpu: 100m
                          memory: 128Mi
                        limits:
                          cpu: 500m
                          memory: 512Mi
            EOF

            # --- Service (NodePort) ---
            cat <<EOF | kubectl apply -f -
            apiVersion: v1
            kind: Service
            metadata:
              name: devops-site
              namespace: ${NAMESPACE}
            spec:
              type: NodePort
              selector:
                app: devops-site
              ports:
                - name: http
                  port: 80
                  targetPort: 8080
                  nodePort: 30000
            EOF

            kubectl rollout restart deploy/devops-site -n ${NAMESPACE}
            kubectl rollout status deploy/devops-site -n ${NAMESPACE}

            echo "‚úÖ Deployment updated and restarted!"
